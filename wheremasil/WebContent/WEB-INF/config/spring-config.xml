<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<context:component-scan base-package="com.wheremasil.."></context:component-scan>
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- 이동 뷰 컨트롤러 -->
	<mvc:view-controller path="index.do" view-name="main.tiles"/>
	
	<!-- interceptors 
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**/login/**/*"/>
			<bean class="com.mycom.common.interceptor.LoginCheckInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	-->
	
	<!-- file upload 처리 multipartResolver 등록 -->
	<bean name="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
	<!-- Validator에서 사용할 properties 파일 등록 - 클라이언트 Request 오류를 검사하기 위함
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
		      p:basename="패키지" p:defaultEncoding="UTF-8"/>
	-->
	
	<!-- ViewResolver -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"
	    p:order="1"/>
	<bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"
	    p:order="2"/>
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
	    p:order="3"/>
		
	<!-- TilesConfigurer 빈으로 등록 : tiles설정파일을 등록 -->
	<bean name="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	    <property name="definitions">
	        <list>
	            <value>/WEB-INF/config/tiles-defs.xml</value>
	        </list>
	    </property>
	</bean>

	<!-- BasicDataSource&mapper위치<-SqlSessionFactoryBean<-SqlSessionTemplate<-MemberDAO<-MemberService -->
	<!-- BasicDataSource -->
	<bean name="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="oracle.jdbc.driver.OracleDriver"
		p:url="jdbc:oracle:thin:@192.168.7.229:1521:XE" p:username="scott"
		p:password="tiger" p:maxActive="50" p:initialSize="20" />
	<!-- SqlSessionFactoryBean : SqlSessionFactoryBuilder의 역할. SqlSessionFactory를 
		생성한다. -->
	<bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:configLocation="/WEB-INF/config/mybatis-config.xml"
		p:dataSource-ref="dataSource" />

	<!-- SqlSessionTemplate 생성 - 생성자로 sqlSessionFactoryBean을 주입 -->
	<bean name="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
		c:sqlSessionFactory-ref="sqlSessionFactory" />

	<!-- Transaction 처리 -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
	<!-- Annotation 기반 Tx -->
	<tx:annotation-driven transaction-manager="transactionManager" />	
</beans>
